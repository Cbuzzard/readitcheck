{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/comments/comments.component.ts","./src/app/comments/comments.component.html","./src/app/delete-button/delete-button.component.ts","./src/app/delete-button/delete-button.component.html","./src/app/dto/question-post.ts","./src/app/dto/submission-post.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login-button/login-button.component.ts","./src/app/login-button/login-button.component.html","./src/app/new-comment/new-comment.component.ts","./src/app/new-comment/new-comment.component.html","./src/app/new-submission/new-submission.component.ts","./src/app/new-submission/new-submission.component.html","./src/app/question/question.component.ts","./src/app/question/question.component.html","./src/app/service/interceptor/http-interceptor.service.ts","./src/app/service/rest/rest.service.ts","./src/app/service/url/url.service.ts","./src/app/service/user/user.service.ts","./src/app/simple-submission/simple-submission.component.ts","./src/app/simple-submission/simple-submission.component.html","./src/app/submission-form-dialog/submission-form-dialog.component.ts","./src/app/submission-form-dialog/submission-form-dialog.component.html","./src/app/submission/submission.component.ts","./src/app/submission/submission.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { SubmissionComponent } from './submission/submission.component';\nimport { UserComponent } from './user/user.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'submission/:id', component: SubmissionComponent },\n  { path: 'user/:id', component: UserComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'readit-frontend';\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { LoginButtonComponent } from './login-button/login-button.component';\nimport { HttpInterceptorService } from './service/interceptor/http-interceptor.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { HeaderComponent } from './header/header.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { NewSubmissionComponent } from './new-submission/new-submission.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { SubmissionFormDialogComponent } from './submission-form-dialog/submission-form-dialog.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { SubmissionComponent } from './submission/submission.component';\nimport { SimpleSubmissionComponent } from './simple-submission/simple-submission.component';\nimport {MatDividerModule} from '@angular/material/divider';\nimport { UserComponent } from './user/user.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { QuestionComponent } from './question/question.component';\nimport { CommentsComponent } from './comments/comments.component';\nimport { NewCommentComponent } from './new-comment/new-comment.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { DeleteButtonComponent } from './delete-button/delete-button.component';\n\n\n//TODO organize imports\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginButtonComponent,\n    HeaderComponent,\n    NewSubmissionComponent,\n    SubmissionFormDialogComponent,\n    HomeComponent,\n    SubmissionComponent,\n    SimpleSubmissionComponent,\n    UserComponent,\n    QuestionComponent,\n    CommentsComponent,\n    NewCommentComponent,\n    DeleteButtonComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatExpansionModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    AppRoutingModule,\n    MatDividerModule,\n    InfiniteScrollModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatTabsModule\n  ],\n  providers: [{provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorService, multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements OnInit {\n\n  @Input()\n  comments = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  getDateString(timestamp) {\n    return new Date(timestamp).toLocaleString()\n  }\n\n  shortenTitle(title) {\n    return `${title.slice(0, 30)}...`\n  }\n\n  onCommentDeleted(res) {\n    this.comments = this.comments.filter((value, index, arr) => {\n      return value.id != res;\n    })\n  }\n\n}\n","<mat-card class=\"card\" *ngIf=\"comments.length === 0\">\n    <div  class=\"nocomments\">\n        <mat-icon>announcement</mat-icon>\n        <p> No comments yet.</p>\n    </div>\n</mat-card>\n\n<div *ngIf=\"comments.length > 0\">\n    <mat-card *ngFor=\"let comment of comments\" class=\"card commentcontainer\">\n\n        <div  class=\"comment\">\n            <div *ngIf=\"comment.submissionTitle\" class=\"commentedon\">\n                <p routerLink=\"/submission/{{comment.submissionId}}\" class=\"commentedon clickable\">\n                    commented on: {{shortenTitle(comment.submissionTitle)}}\n                </p>\n            </div>\n            <h3 class=\"commentcontent\">{{comment.content}}</h3><br>\n            <mat-divider></mat-divider><br>\n            <div class=\"commentfooter\">\n                <div>\n                    <app-delete-button [content]=\"{submissionId: comment.submissionId, userId: comment.user.id, commentId: comment.id}\" (deleted)=\"onCommentDeleted($event)\"></app-delete-button>\n                    <p>posted by: </p>\n                    <p routerLink=\"/user/{{comment.user.id}}\" class=\"clickable profilelink\">{{comment.user.username}}</p>\n                </div>\n                <p class=\"timestamp\">{{getDateString(comment.timestamp)}}</p>\n            </div>\n        </div>\n    \n    </mat-card>\n</div>\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { RestService } from '../service/rest/rest.service';\nimport { UserService } from '../service/user/user.service';\n\n@Component({\n  selector: 'app-delete-button',\n  templateUrl: './delete-button.component.html',\n  styleUrls: ['./delete-button.component.css']\n})\nexport class DeleteButtonComponent implements OnInit {\n\n  @Input()\n  content;\n\n  @Output()\n  deleted = new EventEmitter<number>()\n\n  isOwner: boolean;\n\n  constructor(private rest: RestService) {\n  }\n\n  ngOnInit(): void {\n    this.isOwner = this.checkUser();\n  }\n\n  checkUser(): boolean {\n    return this.content.userId === sessionStorage.getItem('userId');\n  }\n\n  onDelete() {\n    if(this.content.commentId) {\n      this.rest.deleteComment(this.content.submissionId, this.content.commentId).subscribe(res => this.deleted.emit(this.content.commentId))\n    } else {\n      this.rest.deleteSubmission(this.content.submissionId).subscribe(res => this.deleted.emit(this.content.submissionId))\n\n    }\n  }\n\n}\n","    <button mat-icon-button color=\"basic\" [matMenuTriggerFor]=\"options\">\n        <mat-icon>more_horiz</mat-icon>\n    </button>\n    \n    <mat-menu #options=\"matMenu\" xPosition=\"after\">\n        <button *ngIf=\"!content.commentId\" mat-menu-item routerLink=\"/submission/{{content.submissionId}}\">\n            <mat-icon>comment</mat-icon>\n            <span>Comments</span>\n        </button>\n        <button *ngIf=\"content.commentId\" mat-menu-item routerLink=\"/submission/{{content.commentId}}\">\n            <mat-icon>account_circle</mat-icon>\n            <span>Profile</span>\n        </button>\n        <button *ngIf=\"isOwner\" mat-menu-item (click)=\"onDelete()\">\n            <mat-icon color=\"warn\">delete</mat-icon>\n            <span>Delete</span>\n        </button>\n\n    </mat-menu>\n\n\n","export class QuestionPost {\r\n\r\n    constructor(\r\n        public question: string,\r\n        public answer: string\r\n    ) {}\r\n\r\n}","import { QuestionPost } from \"./question-post\";\r\n\r\nexport class SubmissionPost {\r\n    \r\n    constructor(\r\n        public title: string,\r\n        public link: string,\r\n        public question: QuestionPost\r\n    ) {}\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../service/user/user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n}\n","<mat-toolbar id=\"header\">\n    <div id=\"title\">\n        <img class=\"logo clickable\" routerLink=\"\" src=\"../../assets/img/readitcheck-logo-white.png\" alt=\"\">\n        <span class=\"clickable\" routerLink=\"\">ReadItCheck</span>\n    </div>\n    <app-login-button></app-login-button>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { SubmissionForList } from '../dto/submission-for-list';\nimport { RestService } from '../service/rest/rest.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent implements OnInit {\n\n  page: number = 0;\n  submissions: Array<SubmissionForList> = []\n\n  constructor(private rest: RestService) {\n    this.getSubmissions()\n  }\n\n  ngOnInit(): void {\n  }\n\n  onScroll() {\n    this.getSubmissions()\n  }\n\n  getSubmissions() {\n    this.rest.getSubmissions(this.page).subscribe((res: Array<SubmissionForList>) => {\n      this.submissions.push(...res)\n    })\n    this.page++\n  }\n\n}\n","<app-new-submission></app-new-submission>\n<div infiniteScroll [infiniteScrollDistance]=\"1\" (scrolled)=\"onScroll()\">\n    <div *ngFor=\"let submission of submissions\">\n        <app-simple-submission [submission]=\"submission\"></app-simple-submission>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../service/user/user.service'\n\n@Component({\n  selector: 'app-login-button',\n  templateUrl: './login-button.component.html',\n  styleUrls: ['./login-button.component.css']\n})\nexport class LoginButtonComponent implements OnInit {\n\n  loginStatus: boolean;\n\n  constructor(private user: UserService) {\n    this.user.loginStatus.subscribe(res => this.loginStatus = res)\n  }\n\n  ngOnInit(): void { }\n\n  login() {\n    this.user.login()\n  }\n\n  logout() {\n    this.user.logout()\n  }\n\n  getUser() {\n    return sessionStorage.getItem('userId');\n  }\n\n  getName() {\n    return sessionStorage.getItem('userName');\n  }\n\n  getUserImg() {\n    return sessionStorage.getItem(\"userImg\")\n  }\n\n}\n","<div id=\"container\">\r\n    <p *ngIf=\"loginStatus\" id=\"name\">{{getName()}} </p>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n        <!-- <mat-icon *ngIf=\"loginStatus\" class=\"profileicon\">account_circle</mat-icon> -->\r\n        <mat-icon *ngIf=\"!loginStatus\" class=\"profileicon\">login</mat-icon>\r\n        <img class=\"profileimage\" src=\"{{getUserImg()}}\">\r\n    </button>    \r\n</div>\r\n\r\n<mat-menu #menu=\"matMenu\">\r\n    <button *ngIf=\"loginStatus\" routerLink=\"/user/{{getUser()}}\" mat-menu-item>\r\n        <mat-icon>account_circle</mat-icon>\r\n        <span>Profile</span>\r\n    </button>\r\n    <button *ngIf=\"!loginStatus\" (click)='login()' mat-menu-item>\r\n        <mat-icon>login</mat-icon>\r\n        <span>Login</span>\r\n    </button>\r\n    <button *ngIf=\"loginStatus\" (click)='logout()' mat-menu-item>\r\n        <mat-icon>logout</mat-icon>\r\n        <span>Logout</span>\r\n    </button>\r\n</mat-menu>\r\n\r\n","import { EventEmitter, Input, ViewChild, ViewEncapsulation, NgZone } from '@angular/core';\nimport {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Submission } from '../dto/submission';\nimport { RestService } from '../service/rest/rest.service';\nimport { Comment } from '../dto/comment'\nimport {take} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-new-comment',\n  templateUrl: './new-comment.component.html',\n  styleUrls: ['./new-comment.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class NewCommentComponent implements OnInit {\n\n  @Input()\n  submission: Submission;\n\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\n\n  commentContent;\n  commentForm: FormGroup;\n\n  constructor(private rest: RestService, private formBuilder: FormBuilder, private _ngZone: NgZone) {\n    this.commentForm = this.formBuilder.group({\n      content: ['', [Validators.required, Validators.maxLength(3000)]]\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  onCommentSubmit(form) {\n    this.rest.postComment(this.submission.id, form.content).subscribe((res: Comment) => {\n      if (res) {\n        this.submission.comments.unshift(res);\n        this.commentContent = ''\n      };\n    });\n  } \n\n  getErrorMessage() {\n    if (this.commentForm.get('content').hasError('required')) return \"required\"\n    if (this.commentForm.get('content').hasError('maxlength')) return \"must be less than 3000 characters\"\n  }\n\n  triggerResize() {\n\n    this._ngZone.onStable.pipe(take(1))\n        .subscribe(() => this.autosize.resizeToFitContent(true));\n  }\n\n}\n","<mat-card *ngIf=\"submission.currentUserApproved\" class=\"card\">\n    <mat-icon class=\"checkmark attentionicon\" color=\"green\" matTooltip=\"You are approved to comment!\" matTooltipClass=\"tooltipgreen\">check_circle</mat-icon>\n    <form [formGroup]=\"commentForm\" (ngSubmit)=\"onCommentSubmit(commentForm.value)\">\n        <mat-form-field class=\"input\" appearance=\"outline\">\n            <mat-label>New Comment</mat-label>\n            <!-- <input matInput placeholder=\"New Comment\" formControlName=\"content\" [value]=\"commentContent\"> -->\n            <textarea matInput\n            cdkTextareaAutosize\n            #autosize=\"cdkTextareaAutosize\"\n            cdkAutosizeMinRows=\"3\"\n            cdkAutosizeMaxRows=\"10\"\n            formControlName=\"content\"\n            [value]=\"commentContent\"></textarea>\n            <mat-error *ngIf=\"commentForm.get('content').invalid\">{{getErrorMessage()}}</mat-error>\n        </mat-form-field>\n        <button [disabled]=\"commentForm.invalid\" class=\"submitbutton\" mat-button type=\"submit\">Post</button>\n\n    </form>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../service/user/user.service';\nimport { RestService } from \"../service/rest/rest.service\"\nimport { MatDialog } from '@angular/material/dialog';\nimport { SubmissionFormDialogComponent } from '../submission-form-dialog/submission-form-dialog.component';\n\n\n@Component({\n  selector: 'app-new-submission',\n  templateUrl: './new-submission.component.html',\n  styleUrls: ['./new-submission.component.css']\n})\nexport class NewSubmissionComponent implements OnInit{\n\n  loginStatus: boolean;\n\n  constructor(private user: UserService, private rest: RestService, public dialog: MatDialog) {\n    \n  }\n\n  ngOnInit(): void {\n    this.user.loginStatus.subscribe(res => {\n      this.loginStatus = res;\n    })\n    this.user.refreshStatus();\n  }\n\n  openDialog() {\n    if (this.loginStatus) {\n      const dialogRef = this.dialog.open(SubmissionFormDialogComponent, {\n        width: '50%',\n        minWidth: '350px',\n      })\n    } else {\n      this.user.login();\n    }\n  }\n}\n","<mat-card class=\"card\" aria-disabled=\"\">\n    <mat-form-field (click)=\"openDialog()\" class=\"input clickable\" appearance=\"outline\">\n        <mat-label>New Submission</mat-label>\n        <input matInput placeholder=\"Placeholder\">\n    </mat-form-field>\n</mat-card>\n","import { EventEmitter, ViewEncapsulation } from '@angular/core';\nimport { Component, Input, OnInit, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { QuestionCheck } from '../dto/question-check';\nimport { RestService } from '../service/rest/rest.service';\nimport { UserService } from '../service/user/user.service';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class QuestionComponent implements OnInit {\n\n  @Input()\n  question: QuestionCheck;\n\n  @Output()\n  questionAnswered = new EventEmitter<boolean>();\n\n  questionForm: FormGroup;\n  wrongAnswer: boolean;\n\n  loginStatus\n\n  constructor(private formBuilder: FormBuilder, private _snackBar: MatSnackBar, private rest: RestService, private user: UserService) {\n    this.questionForm = this.formBuilder.group({\n      answer: ['', [Validators.required, Validators.maxLength(25), this.checkForError()]]\n    })\n  }\n\n  ngOnInit(): void {\n    this.user.loginStatus.subscribe(res => {\n      this.loginStatus = res;\n    })\n    this.user.refreshStatus();\n  }\n\n  onQuestionSubmit(form) {\n    this.rest.checkAnswer(this.question.id, form.answer).subscribe((res: boolean) => {\n      if (res) {\n        this.questionAnswered.emit(res);\n        this.openSnackBar(\"Success! You are now approved to comment.\");\n      }\n      this.wrongAnswer = true;\n      this.questionForm.controls['answer'].updateValueAndValidity()\n    })\n  }\n\n  checkForError(): ValidatorFn {\n    return (control: AbstractControl): {[key: string]: any} | null => {\n      return this.wrongAnswer ? {invalid: this.wrongAnswer} : null\n    }\n  }\n  \n  getErrorMessage() {\n    if (this.questionForm.get('answer').hasError('required')) return \"required\"\n    if (this.questionForm.get('answer').hasError('maxlength')) return \"must be less than 25 characters\" \n    if (this.questionForm.get('answer').hasError('invalid')) {\n      this.wrongAnswer = false;\n      return \"wrong answer\"\n    }\n  }\n\n  openSnackBar(content: string) {\n    this._snackBar.open(content, '', {duration: 5000})\n  }\n\n  login() {\n    this.user.login().then(es => window.location.reload());\n  }\n\n}\n","<mat-card *ngIf=\"question\" class=\"card\">\n    <form [formGroup]=\"questionForm\" (ngSubmit)=\"onQuestionSubmit(questionForm.value)\">\n        <div class=\"questionheader\">\n            <h3>{{question.question}}</h3>\n            <mat-icon class=\"attentionicon\" color=\"warn\" matTooltip=\"You are not approved to comment. Answer this question to be approved to comment.\" matTooltipClass=\"tooltipred\">error</mat-icon>\n        </div>\n        <mat-form-field (click)=\"loginStatus || login()\" class=\"input\" appearance=\"outline\">\n            <mat-label>Answer</mat-label>\n            <input matInput placeholder=\"Answer\" formControlName=\"answer\">\n            <mat-error *ngIf=\"questionForm.get('answer').invalid\">{{getErrorMessage()}}</mat-error>\n        </mat-form-field>\n    </form>\n</mat-card>","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class HttpInterceptorService implements HttpInterceptor{\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (sessionStorage.getItem('token')) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: sessionStorage.getItem('token')\r\n        }\r\n      })\r\n    }\r\n\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = '';\r\n        if (error.error instanceof ErrorEvent) {\r\n          errorMessage = `Error: ${error.error.message}`;\r\n        } else if (error.error.errors) {\r\n          errorMessage = `Error Status: ${error.status}\\nMessage: ${error.error.errors}`;\r\n        } else {\r\n          errorMessage = `Error Status: ${error.status}\\nMessage: ${error.message}`;\r\n        }\r\n        alert(errorMessage);\r\n        return throwError(errorMessage);\r\n      }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { SubmissionPost } from 'src/app/dto/submission-post';\nimport { UrlService } from '../url/url.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestService {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n\n  constructor(private url: UrlService, private http: HttpClient) { }\n\n  postSubmission(submissionPost) {\n    console.log(submissionPost.title)\n    return this.http.post(`${this.url.backend}/rest/submission`, JSON.stringify(submissionPost), this.httpOptions);\n  }\n\n  getSubmission(id: number) {\n    return this.http.get(`${this.url.backend}/rest/submission/${id}`);\n  }\n\n  getSubmissions(page: number) {\n    return this.http.get(`${this.url.backend}/rest/submission?page=${page}`);\n  }\n\n  getLinkPreview(url: string) {\n    return this.http.get(`${this.url.backend}/rest/link?url=${url}`);\n  }\n\n  checkAnswer(id: number, answer: string) {\n    return this.http.post(`${this.url.backend}/rest/question/${id}`, answer, this.httpOptions);\n  }\n\n  postComment(submissionId, content) {\n    return this.http.post(`${this.url.backend}/rest/submission/${submissionId}/comment`, {content: content}, this.httpOptions);\n  }\n\n  getUser(id: number) {\n    return this.http.get(`${this.url.backend}/rest/user/${id}`);\n  }\n\n  deleteComment(submissionId, commentId) {\n    return this.http.delete(`${this.url.backend}/rest/submission/${submissionId}/comment/${commentId}`);\n  }\n\n  deleteSubmission(submissionId) {\n    return this.http.delete(`${this.url.backend}/rest/submission/${submissionId}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlService {\n\n  constructor() { }\n\n  backend: string = \"http://localhost:8080\"\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UrlService } from '../url/url.service';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  gapiSetup: boolean = false;\n  loginStatus: Subject<boolean> = new Subject<boolean>();\n  authInstance: gapi.auth2.GoogleAuth;\n  userId;\n\n  constructor(private http: HttpClient, private url: UrlService) {\n    this.initGoogleAuth();\n    this.refreshStatus();\n  }\n\n  refreshStatus() {\n    this.authenticate().then(res => this.loginStatus.next(JSON.stringify(res) === 'true'))\n  }\n\n  async authenticate(): Promise<Object> {\n    const httpOptions = { headers: new HttpHeaders({}) };\n    return await this.http.get(`${this.url.backend}/rest/authenticate`, httpOptions).toPromise();\n  }\n\n  login() {\n    return this.authInstance.signIn().then(user => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', `${this.url.backend}/login`);\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n      xhr.setRequestHeader('X-ID-TOKEN', user.getAuthResponse().id_token);\n      xhr.send();\n      xhr.onload = async () => {\n        sessionStorage.setItem('token', xhr.getResponseHeader('Authorization'))\n        sessionStorage.setItem('userId', user.getId())\n        sessionStorage.setItem('userName', user.getBasicProfile().getName())\n        sessionStorage.setItem('userImg', user.getBasicProfile().getImageUrl())\n        window.location.reload();\n      };\n    })\n  }\n\n  logout() {\n    gapi.auth2.getAuthInstance().signOut().then(async () => {\n      sessionStorage.clear();\n      this.refreshStatus()\n      window.location.reload();\n    })\n  }\n\n  async initGoogleAuth() {\n    if (!this.gapiSetup) {\n      const pload = new Promise((resolve) => {\n        gapi.load('auth2', resolve);\n      });\n  \n      return pload.then(async () => {\n        gapi.auth2\n          .init({ client_id: '53814632760-bb01hnpjut777v9cmkjh9fcimiud3r82.apps.googleusercontent.com' })\n          .then(auth => {\n            this.gapiSetup = true;\n            this.authInstance = auth;\n          });\n        });\n      }\n    }\n    \n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Submission } from '../dto/submission';\nimport { RestService } from '../service/rest/rest.service';\n\n@Component({\n  selector: 'app-simple-submission',\n  templateUrl: './simple-submission.component.html',\n  styleUrls: ['./simple-submission.component.css']\n})\nexport class SimpleSubmissionComponent implements OnInit {\n\n  @Input()\n  submission: Submission;\n  linkPreview: string\n  deleted: boolean\n\n\n  constructor(private rest: RestService) {}\n\n  ngOnInit(): void {\n    this.rest.getLinkPreview(this.submission.link).subscribe((res: any) => {\n      this.linkPreview = res ? res.image : ''\n    })\n  }\n\n  getDateString(timestamp) {\n    return new Date(timestamp).toLocaleString()\n  }\n\n  onDeleted() {\n    this.deleted = true;\n  }\n\n}\n","<mat-card class=\"card\" *ngIf=\"!deleted\">\n    <div id=\"textcontainer\">\n        <div class=\"titlecontainer\">\n            <h2 routerLink=\"/submission/{{submission.id}}\" class=\"title clickable\">{{submission.title}}</h2>\n            <a class=\"link\" href=\"{{submission.link}}\">Article Link</a>            \n\n        </div>\n        \n        <div class=\"submissionfootercontainer\">\n            <div>\n                <app-delete-button [content]=\"{submissionId: submission.id, userId: submission.user.id}\" (deleted)=\"onDeleted()\"></app-delete-button>\n                <div class=\"usercontainer\">\n                    <p>Posted By: </p>\n                    <p routerLink=\"/user/{{submission.user.id}}\" class=\"clickable profilelink\">{{submission.user.username}}</p>\n                </div>\n            </div>\n            <p class=\"timestamp\">{{getDateString(submission.timestamp)}}</p>\n        </div>\n\n    </div>\n        <a href=\"{{submission.link}}\" style=\"height: fit-content;\">\n            <img class=\"linkpreview clickable\" src=\"{{linkPreview}}\" alt=\"\">\n        </a>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RestService } from \"../service/rest/rest.service\"\nimport { SubmissionPost } from '../dto/submission-post'\nimport { QuestionPost } from '../dto/question-post'\nimport { Router } from '@angular/router';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-submission-form-dialog',\n  templateUrl: './submission-form-dialog.component.html',\n  styleUrls: ['./submission-form-dialog.component.css']\n})\nexport class SubmissionFormDialogComponent implements OnInit {\n\n  linkReg = /https?:\\/\\/(www\\.)[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/gi\n  submissionForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private rest: RestService, private router: Router, public dialogRef: MatDialogRef<SubmissionFormDialogComponent>) {\n    this.submissionForm = this.formBuilder.group({\n      title: ['', [Validators.required, Validators.maxLength(255)]],\n      link: ['', [Validators.required, Validators.maxLength(100), Validators.pattern(this.linkReg)]],\n      question: ['', [Validators.required, Validators.maxLength(255)]],\n      answer: ['', [Validators.required, Validators.maxLength(25)]]\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(form) {\n    this.rest.postSubmission(new SubmissionPost(form.title, form.link, new QuestionPost(form.question, form.answer))).subscribe(res => {\n        this.router.navigateByUrl(`/submission/${res}`)\n        this.dialogRef.close()\n      })\n  }\n\n  getErrorMessage(field) {\n    switch(field) {\n      case 'title':\n        if (this.submissionForm.get(field).hasError('required')) return \"required\"\n        if (this.submissionForm.get(field).hasError('maxlength')) return \"must be less than 255 characters\"\n        break;\n      case 'link':\n        if (this.submissionForm.get(field).hasError('required')) return \"required\"\n        if (this.submissionForm.get(field).hasError('maxlength')) return \"must be less than 1000 characters\"\n        if (this.submissionForm.get(field).hasError('pattern')) return \"must be in format of https://www.ex.com\"\n        break;\n      case 'question':\n        if (this.submissionForm.get(field).hasError('required')) return \"required\"\n        if (this.submissionForm.get(field).hasError('maxlength')) return \"must be less than 255 characters\"\n        break;\n      case 'answer':\n        if (this.submissionForm.get(field).hasError('required')) return \"required\"\n        if (this.submissionForm.get(field).hasError('maxlength')) return \"must be less than 25 characters\"\n        break;\n    }\n    \n  }\n\n}\n\n","<div id=\"header\">\n    <h2>New Submission</h2>\n</div>\n\n<form [formGroup]=\"submissionForm\" (ngSubmit)=\"onSubmit(submissionForm.value)\">\n<mat-form-field class=\"input\" appearance=\"outline\">\n    <mat-label>New Submission</mat-label>\n    <input matInput placeholder=\"Title\" formControlName=\"title\">\n    <mat-error *ngIf=\"submissionForm.get('title').invalid\">{{getErrorMessage('title')}}</mat-error>\n</mat-form-field>\n\n<mat-form-field class=\"input\" appearance=\"outline\">\n    <mat-label>Link</mat-label>\n    <input matInput placeholder=\"Link\" formControlName=\"link\">\n    <mat-error *ngIf=\"submissionForm.get('link').invalid\">{{getErrorMessage('link')}}</mat-error>\n</mat-form-field>\n\n<mat-form-field class=\"input\" appearance=\"outline\">\n    <mat-label>Question</mat-label>\n    <input matInput placeholder=\"Question\" formControlName=\"question\">\n    <mat-error *ngIf=\"submissionForm.get('question').invalid\">{{getErrorMessage('question')}}</mat-error>\n</mat-form-field>\n\n<mat-form-field class=\"input\" appearance=\"outline\">\n    <mat-label>Answer</mat-label>\n    <input matInput placeholder=\"Answer\" formControlName=\"answer\">\n    <mat-error *ngIf=\"submissionForm.get('answer').invalid\">{{getErrorMessage('answer')}}</mat-error>\n</mat-form-field>\n<button [disabled]=\"submissionForm.invalid\" mat-button type=\"submit\">Submit</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RestService } from '../service/rest/rest.service';\nimport { Submission } from '../dto/submission'\nimport { UserService } from '../service/user/user.service';\nimport { Comment } from '../dto/comment'\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-submission',\n  templateUrl: './submission.component.html',\n  styleUrls: ['./submission.component.css'],\n})\nexport class SubmissionComponent implements OnInit {\n\n  submission: Submission;\n  linkPreview: string;\n  loginStatus: boolean;\n  userSubscription: Subscription;\n\n  constructor(private route: ActivatedRoute, private router: Router, private rest: RestService, private user: UserService) {}\n\n  ngOnInit(): void {\n    this.userSubscription = this.user.loginStatus.subscribe(res => {\n      this.loginStatus = res;\n    })\n    this.user.refreshStatus();\n    this.getSubmission()\n  }\n\n  getSubmission() {\n    this.route.params.subscribe(param => {\n      this.rest.getSubmission(param.id).subscribe((res: Submission) => {\n        this.submission = res\n        this.rest.getLinkPreview(this.submission.link).subscribe((res: any) => {\n          this.linkPreview = res ? res.image : ''\n        })\n      });\n    })\n  }\n\n  getDateString(timestamp) {\n    let d = new Date(timestamp)\n    return d.toLocaleString()\n  }\n\n  questionAnswered(res) {\n    this.submission.currentUserApproved = res;\n  }\n\n  onDeleted() {\n    this.userSubscription.unsubscribe();\n    this.router.navigateByUrl('')\n  }\n\n  \n\n}\n","<div class=\"container\" *ngIf='submission'>\n\n    <mat-card class=\"card\">\n        <a href=\"{{submission.link}}\">\n            <img class=\"linkpreview\" src=\"{{linkPreview}}\" alt=\"\">\n        </a>\n        <h2>{{submission.title}}</h2>\n        <a class=\"link\" href=\"{{submission.link}}\">Article Link</a>\n        <div class=\"submissionfootercontainer\">\n            <div class=\"usercontainer\">\n                <app-delete-button [content]=\"{submissionId: submission.id, userId: submission.user.id}\" (deleted)=\"onDeleted()\"></app-delete-button>\n                <p>posted by: </p>\n                <p routerLink=\"/user/{{submission.user.id}}\" class=\"clickable profilelink\">{{submission.user.username}}</p>\n            </div>\n            <p class=\"timestamp\">{{getDateString(submission.timestamp)}}</p>\n        </div>\n    </mat-card>\n\n    <app-new-comment *ngIf=\"submission.currentUserApproved\" [submission]='submission'></app-new-comment>\n\n    <app-question *ngIf=\"!loginStatus || !submission.currentUserApproved\" [question]=\"submission.question\" (questionAnswered)=\"questionAnswered($event)\"></app-question>\n\n    <app-comments [comments]=\"submission.comments\"></app-comments>\n\n</div>\n\n\n\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RestService } from '../service/rest/rest.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class UserComponent implements OnInit {\n\n  user;\n  selectedTab = 0;\n\n  constructor(private rest: RestService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  getUser() {\n    this.route.params.subscribe(param => {\n      this.rest.getUser(param.id).subscribe(res => {\n        this.user = res\n      })\n    })\n  }\n\n  tabChange(tab) {\n    this.selectedTab = tab.index;\n  }\n\n}\n","<mat-card *ngIf=\"user\" class=\"card\">\n    <img class=\"profileimage\" src=\"{{user.picture}}\" alt=\"\">\n    <h2 class=\"username\">{{user.username}}</h2>\n    <div class=\"slidercontainer\">\n        <mat-tab-group mat-align-tabs=\"center\" (selectedTabChange)=\"tabChange($event)\">\n            <mat-tab label=\"Submissions\"></mat-tab>\n            <mat-tab label=\"Comments\"></mat-tab>\n          </mat-tab-group>\n    </div>\n</mat-card>\n\n\n<div class=\"contentcontainer\">\n    <mat-tab-group *ngIf=\"user\" mat-align-tabs=\"center\" dynamicHeight [(selectedIndex)]=\"selectedTab\">\n        <mat-tab label=\"Submissions\">\n            <div *ngIf=\"user.submissions.length > 0\">\n                <div *ngFor=\"let submission of user.submissions\">\n                    <app-simple-submission [submission]=\"submission\"></app-simple-submission>\n                </div>\n            </div>\n            <div *ngIf=\"!user.submissions.length > 0\">\n                <mat-card class=\"card\">\n                    <h2>Submissions</h2>\n                    <mat-divider></mat-divider><br>\n    \n                    <div class=\"nosubmissions\">\n                        <mat-icon>announcement</mat-icon>\n                        <p> No Submissions yet.</p>\n                    </div>\n                </mat-card>\n            </div>\n        </mat-tab>\n        <mat-tab label=\"Comments\">\n            <app-comments [comments]=\"user.comments\"></app-comments>\n        </mat-tab>\n    </mat-tab-group>    \n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}